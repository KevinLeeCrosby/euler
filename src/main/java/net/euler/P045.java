package net.euler;

/**
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * <p/>
 * Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
 * Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
 * Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
 * It can be verified that T285 = P165 = H143 = 40755.
 * <p/>
 * Find the next triangle number that is also pentagonal and hexagonal.
 *
 * @author Kevin Crosby
 */
public class P045 {
  private static int triangular(int n) {
    return n * (n + 1) / 2;
  }

  private static int pentagonal(int n) {
    return n * (3 * n - 1) / 2;
  }

  private static int hexagonal(int n) {
    return n * (2 * n - 1);
  }

  private static int dt(int n) {
    return n;
  }

  //Every hexagonal number is a triangular number,
  // but only every other triangular number (the 1st, 3rd, 5th, 7th, etc.) is a hexagonal number
  // -- Wikipedia Hexagonal number
  private static int d2t(int n) {
    return dt(n) + dt(n - 1);
  }

  private static int dp(int n) {
    return 3 * n - 2;
  }

  private static int dh(int n) {
    return 4 * n - 3;
  }

  public static void main(String[] args) {
    int t = 285;
    int p = 165;
    int h = 143;

    int tn = triangular(t);
    int pn = pentagonal(p);
    int hn = hexagonal(h);

    assert tn == pn && pn == hn : "Not same number!";

    t += 2;
    tn += d2t(t);
    hn += dh(++h);
    while (tn != pn || pn != hn) {
      if (pn < hn) {
        pn += dp(++p);
      } else { // if (pn > hn)
        t += 2;
        tn += d2t(t);
        hn += dh(++h);
      }
    }
    System.out.print("The next triangle number that is also pentagonal and hexagonal is ");
    System.out.println("T" + t + " = P" + p + " = H" + h + " = " + tn + ".");
  }
}
